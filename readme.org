* lem

=lem= is an Emacs client library and interface for Lemmy, the federated link-aggregator. For information about Lemmy, see [[http://joinlemmy.org][joinlemmy.org]].

=lem-api.el= is the API requests layer. All functions make requests and return JSON data pased into Elisp.

The idea is that it's then possible to write different frontends so users can read lemmy posts in whatever forms they like. Possibilities are notmuch, gnus, md4rd, elfeed, or a standalone rendering option more like =mastodon.el=.

Currently, most of the basic endpoints are implemented, and most but not all parameters for each endpoint. There is an active todo list of endpoints in the file.

New endpoints are trivial to add with the =lem-request= macro.

=lem-ui.el= is our own basic interface layer. It's new and necro, but coming along. Takes some inspiration from =mastodon.el=, as that's what I know.

* Logging in

See =lem-login= and =lem-login-set-token=. Lemmy seems to just require an =auth= parameter with a token you receive as a response to logging in. Currently this token is saved to the persistent variable =lem-auth-token=, which is probably not smart, but it's easy.

* dependency

=lem= depends on [[https://codeberg.org/martianh/fedi.el][fedi.el]], a library to make writing a library of API requests easier.

* TODOS (UI layer)

- [X] view instance
- [X] list communities
- [X] view community
- [X] view user
- [X] list users
- [X] view post and comments
- [X] adjust listing type and sort for views
- [X] buffer macro
- [X] simple reply
- [X] simple private message
- [X] subscribe to community
- [X] search by type: user, community, post, comment, all
- [X] prev/next item
- [-] finish type/sort cycling of views
- [ ] finish implementing limit
- [ ] update current buffer
- [ ] add more to buffer
- [ ] proper buffer naming/separation
- [ ] pagination
- [ ] generic like/dislike cmds
- [ ] rich text rendering of content and bylines
- [ ] tabstop navigation logic (from mastodon.el)
- [ ] timestamp logic (from mastodon.el)
- [ ] rich compose interface (from mastodon.el)
- [ ] comment threads (see #1)
- [ ] =~/.authinfo.gpg=
  
* lem commands index
#+BEGIN_SRC emacs-lisp :results table :colnames '("Binding" "Command" "Description") :exports results
  (let ((rows))
    (mapatoms
     (lambda (symbol)
       (when (and (string-match "^lem"
                                (symbol-name symbol))
                  (commandp symbol))
         (let* ((doc (car
                      (split-string
                       (or (documentation symbol t) "")
                       "\n")))
                ;; add more keymaps here
                ;; some keys are in sub 'keymap keys inside a map
                (maps (list lem-mode-map))
                (binding-code
                 (let ((keys (where-is-internal symbol maps nil nil (command-remapping symbol))))
                   ;; just take first 2 bindings:
                   (if (> (length keys) 2)
                       (list (car keys) (cadr keys))
                     keys)))
                (binding-str (if binding-code
                                 (mapconcat #'help--key-description-fontified
                                            binding-code ", ")
                               "")))
           (push `(,binding-str ,symbol ,doc) rows)
           rows))))
    (sort rows (lambda (x y) (string-lessp (cadr x) (cadr y)))))
#+END_SRC

#+RESULTS:
| Binding | Command                                | Description                                                    |
|---------+----------------------------------------+----------------------------------------------------------------|
|         | lem                                    | Open lem, a Lemmy client.                                      |
|         | lem-login-set-token                    | Login for user NAME with PASSWORD.                             |
|         | lem-mode                               | Major mode for Lemmy, the federated link-aggregator and forum. |
| n       | lem-next-item                          |                                                                |
| p       | lem-prev-item                          |                                                                |
|         | lem-ui-choose-sort                     | Read a sort type and load it.                                  |
|         | lem-ui-choose-type                     | Read a listing-type type and load it.                          |
|         | lem-ui-cycle-instance-view-type        | Cycle instance view between view listing types.                |
| C-c C-c | lem-ui-cycle-listing-type              | Cycle view between `lem-listing-types'.                        |
| C-c C-s | lem-ui-cycle-sort                      | Cycle view between some `lem-sort-types'                       |
|         | lem-ui-cycle-view-type                 | Cycle view between `lem-listing-types'.                        |
|         | lem-ui-dislike-comment-at-point        | .                                                              |
|         | lem-ui-get-comment-children-at-point   | TYPE.                                                          |
| s       | lem-ui-jump-to-subscribed              | Prompt for a subscribed community and view it.                 |
|         | lem-ui-like-comment-at-point           |                                                                |
|         | lem-ui-list-subscriptions              | .                                                              |
|         | lem-ui-message-user-at-point           | Send private message to user at point.                         |
|         | lem-ui-render-subscribed-communities   | Render the communities subscribed to by the logged in user.    |
|         | lem-ui-reply-simple                    | Reply to post or comment at point.                             |
|         | lem-ui-search                          | Do a search for one of the types in `lem-search-types'.        |
| S       | lem-ui-subscribe-to-community-at-point | .                                                              |
|         | lem-ui-view-comment-post               | View post of comment at point.                                 |
|         | lem-ui-view-communities                | View communities, subscribed to by the logged in user.         |
| C       | lem-ui-view-community-at-point         | .                                                              |
|         | lem-ui-view-item-community             | View community of item at point.                               |
|         | lem-ui-view-item-user                  | View user of item at point.                                    |
|         | lem-ui-view-post-at-point              | .                                                              |
|         | lem-ui-view-subscribed-communities     | View the communities subscribed to by the logged in user.      |
| RET     | lem-ui-view-thing-at-point             | View post, community or user at point.                         |
|         | lem-ui-view-user-at-point              | View user at point.                                            |
